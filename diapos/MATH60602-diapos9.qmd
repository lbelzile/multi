---
title: "Analyse de survie"
subtitle: "Analyse multidimensionnelle appliquée"
date: ""
author: "Léo Belzile"
institute: "HEC Montréal"
format: beamer
navigation: empty
colortheme: Flip
innertheme: Flip
outertheme: Flip
themeoptions: "bullet=circle, topline=true, shadow=false"
beamerarticle: false
pdf-engine: lualatex
cache: true
code-line-numbers: true
fig-align: 'center'
mainfont: "VisbyCF-Medium"
mathfont: 'Latin Modern Math'
sansfont: 'Latin Modern Sans'
keep-tex: true
include-in-header: 
      text: |
        \usepackage{tabu}
        \usepackage{mathtools}
        \usepackage{mathrsfs}
---

# Modèle à risques proportionnels de Cox 
```{r}
#| label: setup06
#| eval: true
#| echo: false
#| message: false
#| warning: false
# automatically create a bib database for R packages
library(knitr)
library(kableExtra)
knitr::write_bib(c(
  .packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
set.seed(1014)
library(hecmulti)
knitr::opts_chunk$set(
  collapse = TRUE,
  cache = TRUE,
  out.width = "80%",
  fig.align = 'center',
  fig.width = 8.5,
  fig.asp = 0.618,  # 1 / phi
  fig.show = "hold"
)
options(knitr.table.format = function() {
  if (knitr::is_latex_output()) 
    "latex" else "html"
})

options(dplyr.print_min = 6, dplyr.print_max = 6)
options(knitr.graphics.auto_pdf = TRUE)
options(scipen = 1, digits = 3)
library(viridis)
library(ggplot2, warn.conflicts = FALSE, quietly = TRUE)
library(poorman, quietly = TRUE, warn.conflicts = FALSE)
library(patchwork)

safe_colorblind_palette <- MetBrewer::met.brewer("Hiroshige",10)

options(ggplot2.continuous.colour="viridis")
options(ggplot2.continuous.fill = "viridis")
scale_colour_discrete <- scale_color_manual(MetBrewer::met.brewer("Hiroshige",10))
scale_fill_discrete <- scale_fill_manual(MetBrewer::met.brewer("Hiroshige",10))
theme_set(theme_classic())
```

Le **modèle à risques proportionnels de Cox** pour $\mathbf{X}$ au temps $t$ est
\begin{align*}
h(t; \mathbf{X}) = h_0(t)\exp(\beta_1\mathrm{X}_1 + \cdots + \beta_p \mathrm{X}_p),
\end{align*}
où $h_0(t)$ est la fonction de risque de base qui remplace l'ordonnée à l'origine.

- Postulat de risques proportionnels: le rapport de risque pour deux observations ne varie pas en fonction du temps $t$.

# Postulat de risques proportionnels

```{r}
#| eval: true
#| echo: false
#| label: fig-risquepropfig
#| out-width: '90%'
#| fig-width: 9
#| fig-height: 6
#| cache: true
#| fig-cap: "Courbes de risques proportionnelles (panneau supérieur) et non proportionnelles (panneau inférieur)."
hazard <- function(x){
  1/53*(3*pexp(x, rate = 1/300) + 25*dnorm(x, 10, 5) +
    3*pgamma(x, shape = 5, scale = 5) +
    2*pgamma(x, shape = 6, scale = 5) + 
    20*pexp(x, rate = 1/400))
}

hazard2 <- function(x){
  (40*pexp(x, rate = 1/300) + 25*dnorm(x, 10, 5) -
     20*pgamma(x, shape = 5, scale = 5) +
     40*pgamma(x, shape = 1, scale = 5) - 
     20*pexp(x, rate = 1/400))/20
}

temps <- seq(0, 60, length.out = 1001)
survrisque <- data.frame(
  temps = temps,
  risque1 = hazard(temps),
  risque2 = hazard2(temps)
)
survie1f <- function(temps,cst = 1){
  sapply(temps, function(ti){
    exp(-cst*integrate(hazard, lower = 0, upper = ti)$value)
  })
}

survie2f <- function(temps,cst = 1){
  sapply(temps, function(ti){
    exp(-cst*integrate(hazard2, lower = 0, upper = ti)$value)
  })
}

fsurvie1 <- data.frame(
  temps = temps,
  survie1a = survie1f(temps, cst = 1),
  survie1b = survie1f(temps, cst = 2)
)
temps2 <- seq(0, 12, length.out = 1001)

fsurvie2 <- data.frame(
  temps = temps2,
  survie2a = survie1f(temps2, cst = 12),
  survie2b = survie2f(temps2)
)
g1 <- ggplot(data = survrisque,
       aes(x = temps)) +
  geom_line(aes(y = risque1),
                color = safe_colorblind_palette[1]) +
  geom_line(aes(y = 2*risque1),
                color = safe_colorblind_palette[8]) +
  scale_y_continuous(limits = c(0, 0.5),
                     expand = c(0, 0)) +
  labs(x = "temps",
       y = "",
       subtitle = "risque") +
  theme_classic()

g2 <- ggplot(data = survrisque,
             aes(x = temps)) +
  geom_hline(yintercept = .5) +
  scale_y_continuous(limits = c(0, 2),
                     expand = c(0, 0)) +
  scale_x_continuous(limits = c(0, 60),
                     expand = c(0, 0)) +
  labs(x = "temps",
       y = "",
       subtitle = "rapport de risque") +
  theme_classic()


g3 <- ggplot(data = fsurvie1,
             aes(x = temps)) +
  geom_line(aes(y = survie1a), col = safe_colorblind_palette[1]) +
  geom_line(aes(y = survie1b), col = safe_colorblind_palette[8])  +
  scale_y_continuous(limits = c(0, 1),
                     expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0),
                     limits = c(0, 61)) + 
  labs(x = "temps",
       y = "",
       subtitle = "survie") +
  theme_classic()


g4 <- ggplot(data = survrisque,
             aes(x = temps)) +
  geom_line(aes(y = risque2),
            color = safe_colorblind_palette[1]) +
  geom_line(aes(y = 12*risque1),
            color = safe_colorblind_palette[8]) +
  scale_y_continuous(limits = c(0, 2),
                     expand = c(0, 0)) +
  scale_x_continuous(limits = c(0, 60),
                     expand = c(0, 0)) +
  labs(x = "temps",
       y = "",
       subtitle = "risque") +
  theme_classic()

g5 <- ggplot(data = survrisque,
             aes(x = temps)) +
  geom_line(aes(y = risque2/risque1)) +
  scale_y_continuous(limits = c(0, 60),
                     expand = c(0, 0)) +
  scale_x_continuous(limits = c(0, 60),
                     expand = c(0, 0)) +
  labs(x = "temps",
       y = "",
       subtitle = "rapport de risque") +
  theme_classic()

g6 <- ggplot(data = fsurvie2,
             aes(x = temps)) +
  geom_line(aes(y = survie2a), 
            col = safe_colorblind_palette[8]) +
  geom_line(aes(y = survie2b),
            col = safe_colorblind_palette[1]) +
  scale_y_continuous(limits = c(0, 1),
                     expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0),
                     limits = c(0, 12)) + 
  labs(x = "temps",
       y = "",
       subtitle = "survie") +
  theme_classic()
(g1 + g2 + g3) / (g4 + g5 + g6)

```

# Absence de proportionnalité et stratification

On peut modéliser la non proportionnalité des risques par la **stratification** pour une variable catégorielle $Z=1, \ldots, K$.

Supposons que l'effet de $Z$ sur le risque varie dans le temps.

On écrit alors 
\begin{align*}
h(t; \mathbf{X}, Z=k) = h_k(t)\exp(\beta_1\mathrm{X}_1 + \cdots + \beta_p \mathrm{X}_p),
\end{align*}
où $h_k(t)$ est la fonction de risque de base pour $Z=k$.

Dans ce modèle

- On suppose que l'effet des variables explicatives $\mathbf{X}$ est le même peut importe la valeur de $Z$.
- L'effet de $Z=k$ vs $Z=j$ pour un même ensemble de variables explicatives $\mathbf{X}$ est $h_k(t)/h_j(t)$, qui dépend du temps.

# Stratification

- **Avantage**: on peut modéliser n'importe quel changement du risque en fonction de $Z$.
- **Désavantage**: on perd la variable explicative $Z$, donc on ne peut tester son effet (pas de coefficient)... on peut résumer l'information pour la variable $Z$ en calculant par exemple les différences de survie à des temps donnés.
- **Désavantage**: la fonction de risque est estimée pour chaque sous-groupe de $Z$ (plus faible taille d'échantillon).


Idéalement, utiliser la stratification avec des variables secondaires ou de contrôles.

# Modèle de Cox avec stratification dans **R**

```{r}
#| label: cox-stratification
#| eval: false
#| echo: true
library(survival)
data(survie1, package = "hecmulti")
# Stratification par service
cox_strat <- coxph(
  Surv(temps, censure) ~ age + sexe + strata(service), 
  data = survie1)
# Décompte par service
with(survie1, table(censure, service))
# Coefficients
summary(cox_strat)
```

# Sorties

```{r}
#| label: tbl-nserv
#| tbl-cap: "Décompte du nombre d'observations par service et status."
#| eval: true
#| echo: false
#| cache: true
nserv <- with(hecmulti::survie1, table(service, censure))
knitr::kable(data.frame(
    "0" = nserv[1,], 
    "1" = nserv[2,], 
    "2" = nserv[3,], 
    "3" = nserv[4,]),
    booktabs = TRUE, 
    col.names = paste0(0:3))
```


```{r}
#| label: tbl-coxstratif
#| tbl-cap: "Rapport de risques pour un modèle de Cox stratifié par service."
#| eval: true
#| echo: false
library(survival)
cox7 <- coxph(Surv(temps, censure) ~ 
                age + sexe + strata(service), 
              data = hecmulti::survie1,
              ties = "exact")
tab7 <- broom::tidy(cox7, 
            exponentiate = TRUE, 
            conf.int = TRUE)[,-(3:5)]
colnames(tab7) <- c("terme",
                    "exp(coef)",
                    "borne inf.", 
                    "borne sup.")
knitr::kable(tab7,
               digits = 2,
               booktabs = TRUE) |>
  kableExtra::kable_styling()
```

# Courbes de survie du modèle stratifié

```{r}
#| eval: true
#| echo: false
#| message: false
#| fig-width: 7
#| fig-height: 5
#| out-width: '85%'
#| fig-align: 'center'
#| warning: false
#| cache: true
pred <- survfit(cox7, 
        newdata = data.frame(service = factor(c(0,1,2,3)),
                             sexe = rep(0,4),
                             age = 40), 
        type = "kaplan-meier")
profil <- 0:3
survcurves <- with(pred,
  data.frame(
    temps = time,
    censure = n.censor > 0,
    survie = c(surv),
    groupe = factor(unlist(sapply(1:4, function(i){rep(profil[i], strata[i])}))))
  )

ggplot(data = survcurves, 
       aes(x = temps, 
           y = survie,
           color = groupe,
           group = groupe)) +
  geom_step() +
  ggplot2::scale_y_continuous(
    expand = c(0,0),
    limits = c(0,1), 
    breaks = seq(0, 1, by = 0.25),
    labels = c("0","0.25","0.5","0.75","1")) + 
  theme_classic() +
  ggplot2::theme(legend.position = "bottom") + 
  ggplot2::labs(x = "temps d'abonnement (en semaines)", 
       subtitle = "Fonction de survie",
       y = "",
       color = 'service')
```


# Risques non proportionnels

Si le postulat de risques proportionnels n'est pas validé, l'effet d'au moins une des variables explicatives dépend du temps.

On peut considérer une modification du modèle de Cox qui inclut une interaction avec le temps, par exemple
\begin{align*}
h(t,\mathbf{X}, Z) = h_0(t)\exp\{\beta_Z(t) Z(t)\}\exp(\mathbf{X}\boldsymbol{\beta})
\end{align*}
si l'effet de la variable explicative $Z(t)$, $\beta_Z(t)$ --- ou la variable elle même -- varie en fonction du temps.

# Exemple 1 - augmentation de l'âge

Ici, le coefficient est supposé constante mais l'âge (en années) augmente à mesure que le temps d'abonnement (en semaines) passe, d'où $\texttt{age}(t) = \texttt{age} + t/52$.


```{r}
#| label: interaction-temps-age
#| echo: true
#| eval: false
cox_np <- survival::coxph(
    Surv(temps, censure) ~ 
     tt(age) + sexe + service, 
     data = survie1, 
     tt = function(x, t, ...){x + t/52})
summary(cox_np)
```
\footnotesize 

On spécifie avec l'option `tt()` dans la formule la variable qui change dans le temps et par la suite la nature de l'interaction temporelle avec l'argument `tt`.

La variable qui dépend du temps doit être créée à l'intérieur de l'appel à `coxph`.



# Exemple 2 - effet de service croissant

Supposons que l'impact du nombre de services varie comme suit,
\begin{align*}
&h(t, \text{age}, \text{sexe}, \texttt{service = i}) \\ &\qquad = h_0(t)\exp(\beta_{\texttt{sexe}}\texttt{sexe} + \beta_{\texttt{age}} \texttt{age} + \beta_{\texttt{service}_i} + \beta_{\texttt{service}_i*t}t).
\end{align*}

Il faut transformer les variables catégorielles en indicateurs binaires pour que le logiciel puisse ajuster le modèle.

# Code **R** pour service

```{r}
#| label: interaction-temps-service
#| echo: true
#| eval: true
#| message: false
#| warning: false
# Créer variables binaires par service
library(dplyr)
survie1_modif <- survie1 |>
  mutate(service1 = service == 1,
         service2 = service == 2,
         service3 = service == 3)
cox_np <- survival::coxph(
    Surv(temps, censure) ~ 
     age + sexe + service + 
      tt(service1) + tt(service2) + tt(service3), 
     data = survie1_modif, 
     tt = function(x, t, ...){t * x})
```

# Coefficients et tests

```{r}
#| label: tbl-cox-nph
#| echo: false
#| eval: true
#| tbl-cap: "Rapport de risque et intervalles de confiance à niveau 95% pour le modèle à risques non proportionnels (interaction linéaire entre temps et service)."
#| cache: true
scnp <- summary(cox_np)$coefficients
tab6 <- broom::tidy(cox_np,
            exponentiate = TRUE, 
            conf.int = TRUE)[,-c(3,6,7)]
colnames(tab6) <- c("terme",
                    "exp(coef)",
                    "test de Wald",
                    "valeur-p")
tab6[,4] <- format.pval(tab6[,4], eps = 1e-3, digits = 3)
knitr::kable(tab6,
               digits = c(2,3,3),
               booktabs = TRUE,
             linesep = "") |>
  kableExtra::kable_styling()
```

# Interprétation des résultats

- Les coefficients pour l'interaction avec $t$ sont petits parce que la plage de $t$ (0 à 200 semaines) est énorme.
- Les coefficients sont positifs: le risque augmente avec le temps. L'impact des rabais pour services multiples diminue avec le temps.
- Deux des termes d'interaction sont significatifs à niveau 5% (statistiques de Wald $Z$ de `r round(summary(cox_np)$coefficients[6,4],3)`, `r round(summary(cox_np)$coefficients[7,4],3)` et `r round(summary(cox_np)$coefficients[8,4],3)` et valeurs-$p$ correspondantes de `r round(summary(cox_np)$coefficients[6,5],3)`, `r round(summary(cox_np)$coefficients[7,5],3)` et `r round(summary(cox_np)$coefficients[8,5],3)`).


# Évolution temporelle de variables explicatives

On considère une extension du modèle de Cox qui permet d'inclure des variables explicatives dont la valeur change dans le temps.


Supposons que la variable $\mathrm{X}_1$ change au fil du temps et que les autres demeurent fixes, tel que
\begin{align*}
h(t; \boldsymbol{x}) = h_0(t) \exp\{\beta_1\mathrm{x}_1(t) + \cdots + \beta_p\mathrm{x}_p\},
\end{align*}
où $\mathrm{x}_1(t)$ indique que la valeur de $\mathrm{X}_1$ dépend du temps $t$.

# Illustration 

:::: {.columns}

::: {.column width="40%"}
```{r}
knitr::include_graphics("figures/Lexis_censure_modif.pdf")
```
:::

::: {.column width="60%"}
Pour ajuster le modèle, on peut casser la contribution d'une observation en segments: considérons un seul changement survenant au temps $t_c$.

- pour le premier segment, on enregistre $t_c$ comme valeur maximale (censure à droite)
- pour la deuxième portion, l'observation est tronquée à gauche à partir de $t_c$.

:::

::::

# Exemple

Supposons qu'il y a eu au plus un changement dans la variable `service`.
On doit formatter la base de données comme suit.

\footnotesize 

```{r}
#| label: tbl-survie3-donnees
#| tbl-cap: "Aperçu des cinq premières observations de la base de données `survie3`."
#| echo: false
#| eval: true
data(survie3, package = "hecmulti")
knitr::kable(survie3 |> dplyr::filter(id <= 5),
             digits = 0,
             booktabs = TRUE,
             linesep = "") |>
  kableExtra::kable_styling()
```

Tout intervalle autre que terminal pour un individu est traité comme de la censure à droite.

\normalsize

# Code pour variables explicatives variables

```{r}
#| eval: false
#| echo: true
data(survie3, package = "hecmulti")
cox4 <- coxph(Surv(time = debut, 
                   time2 = fin, 
                   event = evenement) ~ 
                age + sexe + service, 
              data = survie3)
```

\footnotesize 

Puisque c’est la valeur d’une variable qui varie dans le temps et non pas son effet, on a l’interprétation usuelle. 

\normalsize 

# Modèle à risques compétitifs

Parfois, la raison pour laquelle un individu quitte l’état étudié peut avoir un intérêt en soi. 

Pour le temps de service d'un employé, on veut faire la distinction entre 

- une démission
- un renvoi
- la retraite

# Exemple


Supposons que nous avons trois causes possibles pour la perte d'un client. La variable `censure` dans le fichier `survie4` vaut:

- `1` si l'individu est toujours abonné à notre service
- `2` désabonnement pour aller chez le compétiteur A
- `3` désabonnement pour aller chez le compétiteur B
- `4` désabonnement parce qu'il n'a plus besoin de cellulaire.

# Transition d'un état à l'autre


:::: {.columns}

::: {.column width="60%"}
```{r}
knitr::include_graphics("figures/transition_etats_modele_risque_competitifs.pdf")
```
:::

::: {.column width="40%"}

Modèle avec transition d'un état de base (abonné) vers un état absorbant (désabonnement, soit chez compétiteur $A$, compétiteur $B$ ou abandon du cellulaire).

:::

::::

# Modèle à risques compétitifs avec modèle de Cox

Pour estimer la probabilité d'un événement au fil du temps, on peut ajuster plusieurs modèles de Cox.

On spécifie une fonction de risque pour chaque événement compétitif,
\begin{align*}
h_1(t; \mathbf{X})&= h_{01}(t) \exp(\beta_{11}\mathrm{X}_1 + \cdots + \beta_{p1} \mathrm{X}_p),\\
&\vdots\\
h_K(t; \mathbf{X})&= h_{0K}(t) \exp(\beta_{1K}\mathrm{X}_1 + \cdots + \beta_{pK} \mathrm{X}_p).\\
\end{align*}
Notez que les coefficients sont différents d'une équation à l'autre.

On peut estimer les paramètres de chaque équation du modèle de Cox séparément sans perte de précision en modifiant la définition de l'événement. 


# Code **R** pour risque compétitif (1)


Deux options: ajuster chaque modèle séparément en traitant tout événement autre que celui d'intérêt comme de la censure à droite.

```{r}
#| eval: true
#| echo: true
# Rappel pour "event":
#  - 1 (TRUE) pour observation, 
#  - 0 (FALSE) pour censure à droite
data(survie4, package = "hecmulti")
rc_cox_A <- coxph(Surv(time = temps, 
                   event = censure == 2) ~ 
                age + sexe + service, 
              data = survie4)
```

\footnotesize

Les observations avec des valeurs pour `censure` de 1, 3 ou 4 sont traitées comme des cas de censure à droite (l'événement quitter pour compétiteur $A$ n'est pas survenu).

\normalsize

# Interprétation des coefficients

Attention, l'interprétation dépend maintenant de l'événement étudié.

```{r}
#| eval: true
#| echo: false
tab_rcA <- broom::tidy(rc_cox_A, 
            exponentiate = TRUE, 
            conf.int = TRUE)[,-(3:5)]
colnames(tab_rcA) <- c("terme",
                    "exp(coef)",
                    "borne inf.", 
                    "borne sup.")
knitr::kable(tab_rcA,
               digits = c(3,2,2),
               booktabs = TRUE) |>
  kableExtra::kable_styling()
```

Selon le modèle, le risque *de quitter pour aller chez le compétiteur A* d'une femme est 0.48 fois celui d'un homme.

# Code **R** pour risque compétitif (2)

Créer une variable avec identifiant $1, \ldots, n$.

Passer la variable état comme **facteur**, avec transition depuis catégorie de référence (ici `censure=1`, soit abonné)

```{r}
#| eval: true
#| echo: true
n <- nrow(survie4)
surv4 <- survie4 |> 
  dplyr::mutate(id = seq_len(n))
rc_cox <- coxph(Surv(time = temps, 
             event = factor(censure)) ~ 
               sexe + age + service,
             data = surv4,
             id = id)
```

\footnotesize

L'identifiant sert dans les cas où on peut transiter entre plusieurs états et il y a plusieurs observations pour un même individu.

# Code **R** pour risques compétitifs (Kaplan--Meier)

Ajuster le modèle multi-état avec un **facteur** pour l'événement, où la catégorie de référence est abonnement (`censure=1`).

Surtout, ne pas estimer les courbes séparément!

```{r}
#| eval: true
#| echo: true
data(survie4, package = "hecmulti")
rc_km <- survfit(Surv(time = temps, 
             event = factor(censure)) ~ 1, #facteur
             data = survie4)
```

# Graphiques

Les représentations graphiques donnent la probabilité d'être dans une situation en fonction du temps (ici avec la catégorie de référence abonnement).

\footnotesize 

```{r}
#| label: fig-competitif
#| fig-cap: "Probabilité d'événement sans variable explicative (Kaplan-Meier, gauche) et avec âge, service et sexe (modèle de Cox, droite)."
#| eval: true
#| echo: false
#| out-width: '100%'
#| fig-width: 8
#| fig-height: 4
par(mfrow = c(1,2), bty = "l")
plot(rc_km, noplot = NULL, 
     col = 1:4,
     ylab = "probabilité dans l'état",
     ylim = c(0,1),
     yaxs = "i")
legend("topright",
       legend = c("abonnement", 
                  "A","B","fin"),
       bty = "n", col = 1:4, lty = 1)
plot(survfit(rc_cox, 
             newdata = hecmulti::survie4[1,]),
     noplot = NULL,
     col = 1:4,
     ylim = c(0,1),
     yaxs = "i")
```

# Récapitulatif

Si le postulat de risques proportionnels ne tient pas, on peut considérer des modifications du modèle de Cox.

- stratification (uniquement pour variables catégorielles) pour estimer le risque de base séparément sur chaque sous-groupe).
- modèle à risques non-proportionnels avec variable ou coefficient qui varient selon le temps

# Récapitulatif

Si les variables explicatives changent au fil du temps, on peut traiter le cas de figure en décomposant la contribution de l'observation en plusieurs segments

- chaque segment autre que terminal est traité comme de la censure à droite
- les segments sont sujets à troncature à gauche.

La base de données doit contenir le temps initial et le temps final de l'intervalle, en plus de l'indicateur.

Il y a un lien possible avec le modèle à risque proportionnels si l'effet est le même pour tous (comme l'âge).

# Récapitulatif

Le modèle multi-état (modèle à risques compétitifs) permet d'estimer la probabilité de chaque transition.

- la survie pour l'événement de base reste le même (désabonnement)
- à chaque temps donné, la probabilité conjointe de chaque $K+1$ possibilités est 1.

Dans **R**, s'assurer que la catégorie de référence est l'état de départ.

